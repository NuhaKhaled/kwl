

kwl2text = "<kwl" @:{ sentence ";" }* ["kwl>"];

sentence =  formatted | command | question | statement | expression ; 

formatted = @:sentence_formatting "(" @:expression ")"; 
sentence_formatting = "headline";
statement = @:expression ".";
command = @:expression "!";
question = @:expression "?";
expression = conjunction join conjunction | conjunction ;

conjunction = clause join clause | "if" @:clause @:"then" @:clause | clause;

clause =  subject_verb_object | subject_verb | verb_object | group; 

subject_verb_object = subject:group verb:action object:group ;
subject_verb = subject:group verb:action ;
verb_object = verb:action object:group ;

(* Component: group *)
group = "{" @:single "}" | single | "{" @:conjunction "}" ;
single = methods | triple_phrase | tuple_kwl | entry | raw ;

action = "{" @:action "}" | conjugated_verb | tuple_verb | verb ;
conjugated_verb = @:tenses "(" @:conjugations "(" @:verb "))" | @:tenses "(" @:conjugations "(" @:tuple_verb "))";
tuple_verb = @:verb "_" @:adverb ;

methods = t:modifiers "(" v: methods ")" | t:modifiers "(" v:triple_phrase ")" | t:modifiers "(" v:tuple_kwl ")"  | t:modifiers "(" v:entry ")" | t:modifiers "(" v:raw ")"; 

triple_phrase = @:entry "(" @:tuple_kwl ")" ;
tuple_kwl = @:entry "_" @:entry | @:entry "_" @:raw;

(* Component: modifiers *)
modifiers =  partofspeech | conjugations | prepositions | tenses | "plural" | formatting;
formatting = "defn" | "quote" | "sample" | "title" ;

join = ":" | "," | "and" | "because" | "but" | "of" | "or" | "so" | "then" | "when" ;


conjugations = "f" | "i" | "je" | "m" | "tu" | "il" | "elle" | "nous" | "vous" | "ils" | "elles" ;
prepositions = "at" | "for" | "from" | "in" | "of" | "like" | "on" | "to" ;
tenses = "cmd" | "done_tdy" | "done_tmw" | "done_ydy" | "inf" | "may" | "not_tdy" | "not_tmw" | "not_ydy" | "now_tdy" | "now_tmw" | "now_ydy" | "tdy" | "tmw" | "ydy" ;


adjective = t:"adj" ":" v:token ;
adverb= t:"adv" ":" v:token ;
determiner = t:"det" ":" v:token ;
noun = t:"nom" ":" v:token ;
possessive = t:"pos" ":" v:token ;
preposition = t:"pre" ":" v:token ;
pronoun = t:"pro" ":" v:token ;
raw = /raw\((.*?)\)/ | /date\((.*?)\)/ ;
verb = t:"act" ":" v:token ;

(* Component: entry *)
entry = t:partofspeech ":" v:token ;
partofspeech = "act" | "adj" | "adv" | "det" | "exc" | "kg" | "nom"| "pos" | "pre" | "pro" | "sci" ; 


(* Component: token *)
token = /[a-zA-Z0-9#\-]*/ ;

